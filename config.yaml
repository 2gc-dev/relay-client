# CloudBridge Relay Client - Working Configuration
# Конфигурация для подключения к CloudBridge Relay в Minikube

# Relay Configuration - используем внешний домен
relay:
  host: "edge.2gc.ru"             # Внешний CloudBridge Relay
  port: 5553                      # CloudBridge Relay P2P QUIC порт
  base_url: "https://edge.2gc.ru:5553"
  timeout: "30s"
  tls:
    enabled: true                  # Включить TLS для HTTPS API
    verify_cert: true
    insecure_skip_verify: false
    server_name: "b1.2gc.space"   # Используем имя из серверного сертификата

# Authentication Configuration
auth:
  type: "oidc"                         # Используем OIDC вместо Keycloak
  token: "toke"
  secret: "secret"                     # для fallback JWT
  skip_validation: false               # CRITICAL: включить валидацию JWT
  disable_token_validation: false
  jwks_cache_ttl: "10m"                # TTL для JWKS кеша
  audience: "cloudbridge"              # Ожидаемая аудитория
  issuer: "https://edge.2gc.ru"        # Обновленный адрес Zitadel
  oidc:
    issuer_url: "https://edge.2gc.ru"  # OIDC Issuer URL для Zitadel
    audience: "cloudbridge-client"     # Client ID для Zitadel
    jwks_url: "https://edge.2gc.ru/oauth/v2/keys"  # JWKS URL для Zitadel (опционально, иначе из discovery)

# P2P Configuration
p2p:
  server_id: "server-a"            # ID сервера A
  tenant_id: "mesh-network-test"   # ID тенанта для P2P mesh
  max_connections: 100
  session_timeout: "300s"
  peer_discovery_interval: "10s"
  connection_retry_interval: "5s"
  max_retry_attempts: 5
  fallback_enabled: true
  derp_fallback: true
  websocket_fallback: true
  auto_relay: true

# ICE Configuration для NAT traversal
ice:
  stun_servers:
    - "edge.2gc.ru:19302"            # STUN сервер внешний
    - "stun.l.google.com:19302"     # Backup STUN
  turn_servers:
    - "edge.2gc.ru:3478"             # TURN сервер внешний
  timeout: "30s"
  max_binding_requests: 7
  connectivity_checks: true
  candidate_gathering: true

# QUIC Configuration
quic:
  handshake_timeout: "8s"
  idle_timeout: "30s"
  max_streams: 100
  max_stream_data: 1048576
  keep_alive_period: "15s"
  insecure_skip_verify: true      # Пропустить проверку для тестирования
  masque_support: true            # Включить поддержку MASQUE
  http_datagrams: true            # Включить HTTP Datagrams
  enable_0rtt: false              # CRITICAL: выключено по умолчанию для безопасности

# WebSocket Configuration (fallback)
websocket:
  enabled: true
  endpoint: "wss://edge.2gc.ru:5553/ws"  # Правильный WebSocket endpoint
  timeout: "30s"
  ping_interval: "10s"
  max_reconnect_attempts: 10
  reconnect_delay: "2s"

# Logging Configuration
logging:
  level: "debug"                  # Включить debug для тестирования
  format: "text"                  # Текстовый формат для удобства
  output: "stdout"               # stdout, stderr, file

# Metrics Configuration
metrics:
  enabled: true
  prometheus_port: 9091
  tenant_metrics: true
  buffer_metrics: true
  connection_metrics: true
  p2p_metrics: true

# Performance Configuration
performance:
  enabled: true
  optimization_mode: "balanced"  # balanced, high_throughput, low_latency
  gc_percent: 100
  memory_ballast: true
  cpu_profile: false

# Heartbeat Configuration
heartbeat:
  interval: "10s"
  timeout: "5s"
  max_missed: 3

# API Configuration - используем внешний адрес edge.2gc.ru
api:
  base_url: "https://edge.2gc.ru:5553"              # Основной API через порт 5553
  p2p_api_url: "https://edge.2gc.ru:5553/api"       # P2P API через порт 5553
  heartbeat_url: "https://edge.2gc.ru:5553/api/v1/tenants/mesh-network-test/peers/register" # Правильный endpoint
  health_url: "https://edge.2gc.ru:5553/health"    # Health через порт 5553
  metrics_url: "https://edge.2gc.ru:5553/metrics"  # Metrics через порт 5553
  timeout: "30s"
  max_retries: 3
  backoff_multiplier: 2.0
  max_backoff: "60s"

# Transport Configuration - порядок fallback
transport:
  order: ["h3", "h2_connect", "ws", "tcp"]  # Порядок fallback транспортов
  cool_down: "15s"                           # Cooldown после переключения
  min_dwell: "20s"                           # Минимальное время на пути

# SLO Configuration - Service Level Objectives
slo:
  targets:
    rtt_p95_ms: 120                          # Целевой RTT p95
    jitter_p95_ms: 25                        # Целевой jitter p95
    loss_p95: 0.01                          # Целевой loss rate p95
  switch_penalty: "15s"                     # Penalty после переключения
  hysteresis_threshold: 10.0                # Порог гистерезиса (%)

# Synthetic Probes Configuration
probes:
  interval: "5s"                            # Интервал между probe
  timeout: "1s"                             # Таймаут probe
  enabled: true                             # Включить synthetic probes
  endpoints:
    - name: "h3_health"
      url: "https://edge.2gc.ru:443/health"
      mode: "h3"
      pop: "edge-2gc-ru"
    - name: "h2_health"
      url: "https://edge.2gc.ru:443/health"
      mode: "h2_connect"
      pop: "edge-2gc-ru"

# Handover Configuration
handover:
  penalty: "15s"                            # Penalty после handover
  token_ttl: "5m"                           # TTL для continuation tokens
  min_interval: "10s"                      # Минимальный интервал между переключениями
  secret_key: "handover-secret-key"        # Секретный ключ для подписи токенов
