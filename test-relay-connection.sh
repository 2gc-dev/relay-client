#!/bin/bash

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ CloudBridge Relay —Å–µ—Ä–≤–µ—Ä—É
# –ê–≤—Ç–æ—Ä: Developer Team
# –î–∞—Ç–∞: 2025-09-18

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
RELAY_HOST="edge.2gc.ru"
HTTP_API_PORT="8080"
P2P_API_PORT="8082"
STUN_PORT="19302"
QUIC_PORT="9090"
MASQUE_PORT="8443"
ENHANCED_QUIC_PORT="9092"

log_info "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ CloudBridge Relay —Å–µ—Ä–≤–µ—Ä—É"
log_info "–°–µ—Ä–≤–µ—Ä: $RELAY_HOST"
echo "=============================================="

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ TCP –ø–æ—Ä—Ç–∞
check_tcp_port() {
    local host=$1
    local port=$2
    local service_name=$3
    
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ $service_name ($host:$port)..."
    
    if timeout 5 bash -c "</dev/tcp/$host/$port" 2>/dev/null; then
        log_success "$service_name –¥–æ—Å—Ç—É–ø–µ–Ω"
        return 0
    else
        log_error "$service_name –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ UDP –ø–æ—Ä—Ç–∞
check_udp_port() {
    local host=$1
    local port=$2
    local service_name=$3
    
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ $service_name UDP ($host:$port)..."
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ–π UDP –ø–∞–∫–µ—Ç
    if echo "test" | timeout 5 nc -u -w 3 "$host" "$port" 2>/dev/null; then
        log_success "$service_name UDP –¥–æ—Å—Ç—É–ø–µ–Ω"
        return 0
    else
        log_warning "$service_name UDP –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è UDP)"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HTTP API
check_http_api() {
    local host=$1
    local port=$2
    local service_name=$3
    
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ $service_name HTTP API..."
    
    local response
    response=$(curl -s -k -w "\n%{http_code}" --connect-timeout 5 "https://$host:$port/health" 2>/dev/null || echo "000")
    local http_code=$(echo "$response" | tail -n1)
    local body=$(echo "$response" | head -n -1)
    
    if [ "$http_code" = "200" ]; then
        log_success "$service_name HTTP API —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $http_code)"
        if [ -n "$body" ]; then
            echo "–û—Ç–≤–µ—Ç: $body"
        fi
        return 0
    else
        log_error "$service_name HTTP API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $http_code)"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ STUN —Å–µ—Ä–≤–µ—Ä–∞
check_stun_server() {
    local host=$1
    local port=$2
    
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ STUN —Å–µ—Ä–≤–µ—Ä–∞ ($host:$port)..."
    
    # –°–æ–∑–¥–∞–µ–º STUN Binding Request
    local stun_request="\x00\x01\x00\x00\x21\x12\xa4\x42\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º STUN –∑–∞–ø—Ä–æ—Å
    if echo -e "$stun_request" | timeout 5 nc -u -w 3 "$host" "$port" 2>/dev/null; then
        log_success "STUN —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç"
        return 0
    else
        log_warning "STUN —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–æ—Ä–º–∞–ª—å–Ω–æ)"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
log_info "–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏..."
echo

# 1. DNS —Ä–µ–∑–æ–ª–≤–∏–Ω–≥
log_info "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS —Ä–µ–∑–æ–ª–≤–∏–Ω–≥–∞..."
if nslookup "$RELAY_HOST" >/dev/null 2>&1; then
    ip=$(nslookup "$RELAY_HOST" | grep "Address:" | tail -1 | awk '{print $2}')
    log_success "DNS —Ä–µ–∑–æ–ª–≤–∏–Ω–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç: $RELAY_HOST -> $ip"
else
    log_error "DNS —Ä–µ–∑–æ–ª–≤–∏–Ω–≥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    exit 1
fi
echo

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ TCP –ø–æ—Ä—Ç–æ–≤
log_info "2. –ü—Ä–æ–≤–µ—Ä–∫–∞ TCP –ø–æ—Ä—Ç–æ–≤..."
check_tcp_port "$RELAY_HOST" "$HTTP_API_PORT" "HTTP API"
check_tcp_port "$RELAY_HOST" "$P2P_API_PORT" "P2P API"
check_tcp_port "$RELAY_HOST" "$MASQUE_PORT" "MASQUE Proxy"
echo

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ UDP –ø–æ—Ä—Ç–æ–≤
log_info "3. –ü—Ä–æ–≤–µ—Ä–∫–∞ UDP –ø–æ—Ä—Ç–æ–≤..."
check_udp_port "$RELAY_HOST" "$STUN_PORT" "STUN Server"
check_udp_port "$RELAY_HOST" "$QUIC_PORT" "QUIC Transport"
check_udp_port "$RELAY_HOST" "$ENHANCED_QUIC_PORT" "Enhanced QUIC"
echo

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP API
log_info "4. –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP API..."
check_http_api "$RELAY_HOST" "$HTTP_API_PORT" "HTTP API"
check_http_api "$RELAY_HOST" "$P2P_API_PORT" "P2P API"
echo

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ STUN —Å–µ—Ä–≤–µ—Ä–∞
log_info "5. –ü—Ä–æ–≤–µ—Ä–∫–∞ STUN —Å–µ—Ä–≤–µ—Ä–∞..."
check_stun_server "$RELAY_HOST" "$STUN_PORT"
echo

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞
log_info "6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞..."
if [ -f "./cloudbridge-client" ]; then
    log_success "–ö–ª–∏–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏
    if ./cloudbridge-client version >/dev/null 2>&1; then
        log_success "–ö–ª–∏–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç"
        ./cloudbridge-client version
    else
        log_error "–ö–ª–∏–µ–Ω—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
else
    log_error "–ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi
echo

# –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
log_info "=============================================="
log_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
log_info "=============================================="

log_info "–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º:"
log_info "1. –ü–æ–ª—É—á–∏—Ç–µ JWT —Ç–æ–∫–µ–Ω –æ—Ç DevOps –∫–æ–º–∞–Ω–¥—ã"
log_info "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./cloudbridge-client p2p --token YOUR_TOKEN --config config-test-quic.yaml"
log_info "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"

echo
log_info "–ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! üöÄ"
