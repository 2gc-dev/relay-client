#!/bin/bash

# –¢–µ—Å—Ç –¥–≤—É—Ö —Ä–µ–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏
# –¶–µ–ª—å: –ø—Ä–æ–≤–µ—Ä–∏—Ç—å P2P —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –º–µ–∂–¥—É –∫–ª–∏–µ–Ω—Ç–∞–º–∏ —á–µ—Ä–µ–∑ relay

echo "üöÄ –¢–µ—Å—Ç –¥–≤—É—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ CloudBridge"
echo "=================================="
echo "–í—Ä–µ–º—è: $(date)"
echo

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã..."
pkill -f cloudbridge-client 2>/dev/null || true
sleep 2

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
echo "üìù –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞..."
cat > config-client2.yaml << 'EOF'
# CloudBridge Client Configuration - Client 2
relay:
  host: "edge.2gc.ru"
  port: 9090
  timeout: "30s"
  tls:
    enabled: true
    min_version: "1.3"
    verify_cert: false
    server_name: "edge.2gc.ru"
  ports:
    http_api: 8080
    p2p_api: 8082
    quic: 9090
    stun: 19302
    masque: 8443
    enhanced_quic: 9092

auth:
  type: "jwt"
  secret: "fallback-key"
  fallback_secret: "fallback-key"
  skip_validation: true

api:
  base_url: "http://edge.2gc.ru:8082"
  p2p_api_url: "http://edge.2gc.ru:8082"
  insecure_skip_verify: true
  timeout: "30s"
  max_retries: 3
  backoff_multiplier: 2.0
  max_backoff: "60s"

logging:
  level: "debug"
  format: "text"
  output: "stdout"

# ICE Configuration
ice:
  stun_servers:
    - "edge.2gc.ru:19302"
  turn_servers: []
  timeout: "30s"
  max_binding_requests: 7
  connection_timeout: "10s"
  gathering_timeout: "5s"

# QUIC Configuration
quic:
  handshake_timeout: "10s"
  idle_timeout: "30s"
  max_streams: 100
  max_stream_data: 1048576
  keep_alive_period: "15s"
  insecure_skip_verify: true

# P2P Configuration
p2p:
  max_connections: 10
  session_timeout: "300s"
  peer_discovery_interval: "30s"
  connection_retry_interval: "5s"
  max_retry_attempts: 3
EOF

echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π –∫–ª–∏–µ–Ω—Ç –≤ —Ñ–æ–Ω–µ
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Client 1 (token-fixed.txt)..."
./cloudbridge-client p2p --config config-test-quic.yaml --token token-fixed.txt --log-level debug > client1.log 2>&1 &
CLIENT1_PID=$!
echo "Client 1 PID: $CLIENT1_PID"

# –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
sleep 5

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ç–æ—Ä–æ–π –∫–ª–∏–µ–Ω—Ç –≤ —Ñ–æ–Ω–µ
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Client 2 (token2.txt)..."
./cloudbridge-client p2p --config config-client2.yaml --token token2.txt --log-level debug > client2.log 2>&1 &
CLIENT2_PID=$!
echo "Client 2 PID: $CLIENT2_PID"

echo
echo "‚è≥ –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
echo
echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–æ–≤..."
echo "================================"

echo "Client 1 (PID: $CLIENT1_PID):"
if ps -p $CLIENT1_PID > /dev/null; then
    echo "‚úÖ Client 1 —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞:"
    tail -10 client1.log
else
    echo "‚ùå Client 1 –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞:"
    tail -10 client1.log
fi

echo
echo "Client 2 (PID: $CLIENT2_PID):"
if ps -p $CLIENT2_PID > /dev/null; then
    echo "‚úÖ Client 2 —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞:"
    tail -10 client2.log
else
    echo "‚ùå Client 2 –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞:"
    tail -10 client2.log
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
echo
echo "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã..."
echo "=================================="

echo "–õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã —Å IP 10.x.x.x:"
ifconfig | grep -A 2 "inet 10\." || echo "–ù–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ —Å IP 10.x.x.x"

echo
echo "–ê–∫—Ç–∏–≤–Ω—ã–µ UDP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –Ω–∞ –ø–æ—Ä—Ç—É 9090:"
netstat -an | grep ":9090" | grep UDP || echo "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö UDP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –Ω–∞ –ø–æ—Ä—Ç—É 9090"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–≥—É—Ç –ª–∏ –∫–ª–∏–µ–Ω—Ç—ã –æ–±—â–∞—Ç—å—Å—è
echo
echo "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–≤—è–∑—å –º–µ–∂–¥—É –∫–ª–∏–µ–Ω—Ç–∞–º–∏..."
echo "====================================="

# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–≤—è–∑–∏
cat > test-client-communication.py << 'EOF'
#!/usr/bin/env python3
import socket
import time
import json

def test_communication():
    print("üß™ –¢–µ—Å—Ç —Å–≤—è–∑–∏ –º–µ–∂–¥—É –∫–ª–∏–µ–Ω—Ç–∞–º–∏ —á–µ—Ä–µ–∑ relay...")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ relay
    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    sock.settimeout(5)
    
    try:
        # –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = {
            "type": "test",
            "from": "test-client",
            "message": "Hello from test client",
            "timestamp": time.time()
        }
        
        data = json.dumps(message).encode('utf-8')
        sock.sendto(data, ("edge.2gc.ru", 9090))
        print("‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ relay")
        
        # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç
        try:
            response, addr = sock.recvfrom(1024)
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç {addr}: {response.decode('utf-8')[:100]}...")
            return True
        except socket.timeout:
            print("‚è∞ Timeout –ø—Ä–∏ –æ–∂–∏–¥–∞–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    finally:
        sock.close()

if __name__ == "__main__":
    test_communication()
EOF

python3 test-client-communication.py

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤
echo
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤..."
kill $CLIENT1_PID 2>/dev/null || true
kill $CLIENT2_PID 2>/dev/null || true
sleep 2

# –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
echo
echo "üìã –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢"
echo "=================="
echo "–í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: $(date)"
echo
echo "–õ–æ–≥–∏ Client 1 —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: client1.log"
echo "–õ–æ–≥–∏ Client 2 —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: client2.log"
echo
echo "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω—ã—Ö –ª–æ–≥–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "  cat client1.log"
echo "  cat client2.log"
echo
echo "–î–ª—è –ø–æ–∏—Å–∫–∞ –æ—à–∏–±–æ–∫:"
echo "  grep -i error client1.log client2.log"
echo "  grep -i "peer" client1.log client2.log"
echo "  grep -i "connection" client1.log client2.log"

# –û—á–∏—Å—Ç–∫–∞
rm -f config-client2.yaml test-client-communication.py

echo
echo "‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!"


