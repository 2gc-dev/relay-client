#!/bin/bash

# –¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ API CloudBridge Relay
# –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, heartbeat –∏ P2P —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ–≤–æ–º—É —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É

echo "üöÄ –¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ API CloudBridge Relay"
echo "================================================"
echo "–í—Ä–µ–º—è: $(date)"
echo

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
check_server() {
    local url=$1
    local name=$2
    
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º $name..."
    if curl -s --connect-timeout 5 "$url" > /dev/null 2>&1; then
        echo "‚úÖ $name –¥–æ—Å—Ç—É–ø–µ–Ω"
        return 0
    else
        echo "‚ùå $name –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
echo "üì° –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò –°–ï–†–í–ï–†–ê"
echo "================================"

if check_server "http://edge.2gc.ru:8082/health" "HTTP API (8082)"; then
    SERVER_URL="http://edge.2gc.ru:8082"
    echo "üéØ –ò—Å–ø–æ–ª—å–∑—É–µ–º HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (8082)"
else
    echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥..."
    ./monitor-server.sh
    exit 1
fi

echo

# –ü—Ä–æ–≤–µ—Ä—è–µ–º health endpoint
echo "üìä –ü–†–û–í–ï–†–ö–ê HEALTH ENDPOINT"
echo "==========================="
curl -s "$SERVER_URL/health" | python3 -m json.tool 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å JSON"
echo

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–∏—Ä–∞
echo "üë§ –¢–ï–°–¢ –£–ü–†–û–©–ï–ù–ù–û–ô –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –ü–ò–†–ê"
echo "===================================="

TOKEN=$(cat token1-clean.txt)
echo "–¢–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω (–¥–ª–∏–Ω–∞: ${#TOKEN} —Å–∏–º–≤–æ–ª–æ–≤)"

# –ò–∑–≤–ª–µ–∫–∞–µ–º tenant_id –∏–∑ —Ç–æ–∫–µ–Ω–∞
TENANT_ID=$(echo "$TOKEN" | cut -d'.' -f2 | base64 -d 2>/dev/null | python3 -c "import sys, json; data=json.load(sys.stdin); print(data.get('tenant_id', 'tenant-216420165'))" 2>/dev/null || echo "tenant-216420165")
echo "Tenant ID: $TENANT_ID"

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
echo "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏..."
REGISTER_RESPONSE=$(curl -s -X POST "$SERVER_URL/api/v1/tenants/$TENANT_ID/peers/register" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $TOKEN" \
  -d '{
    "public_key": "test-peer-public-key-new",
    "allowed_ips": ["10.0.0.0/24"]
  }' 2>/dev/null)

if [ $? -eq 0 ] && [ -n "$REGISTER_RESPONSE" ]; then
    echo "‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:"
    echo "$REGISTER_RESPONSE" | python3 -m json.tool 2>/dev/null || echo "$REGISTER_RESPONSE"
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º peer_id –∏ relay_session_id
    PEER_ID=$(echo "$REGISTER_RESPONSE" | python3 -c "import sys, json; data=json.load(sys.stdin); print(data.get('peer_id', ''))" 2>/dev/null || echo "")
    RELAY_SESSION_ID=$(echo "$REGISTER_RESPONSE" | python3 -c "import sys, json; data=json.load(sys.stdin); print(data.get('relay_session_id', ''))" 2>/dev/null || echo "")
    REGISTERED_AT=$(echo "$REGISTER_RESPONSE" | python3 -c "import sys, json; data=json.load(sys.stdin); print(data.get('registered_at', ''))" 2>/dev/null || echo "")
    
    if [ -n "$PEER_ID" ] && [ -n "$RELAY_SESSION_ID" ]; then
        echo
        echo "üéØ PEER_ID: $PEER_ID"
        echo "üéØ RELAY_SESSION_ID: $RELAY_SESSION_ID"
        echo "üéØ REGISTERED_AT: $REGISTERED_AT"
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º heartbeat
        echo
        echo "üíì –¢–ï–°–¢ HEARTBEAT"
        echo "================="
        HEARTBEAT_RESPONSE=$(curl -s -X POST "$SERVER_URL/api/v1/tenants/$TENANT_ID/peers/$PEER_ID/heartbeat" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $TOKEN" \
          -d "{
            \"status\": \"active\",
            \"relay_session_id\": \"$RELAY_SESSION_ID\"
          }" 2>/dev/null)
        
        if [ $? -eq 0 ] && [ -n "$HEARTBEAT_RESPONSE" ]; then
            echo "‚úÖ Heartbeat —É—Å–ø–µ—à–µ–Ω:"
            echo "$HEARTBEAT_RESPONSE" | python3 -m json.tool 2>/dev/null || echo "$HEARTBEAT_RESPONSE"
        else
            echo "‚ùå Heartbeat –Ω–µ —É–¥–∞–ª—Å—è"
        fi
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –ø–∏—Ä–æ–≤
        echo
        echo "üîç –¢–ï–°–¢ –û–ë–ù–ê–†–£–ñ–ï–ù–ò–Ø –ü–ò–†–û–í"
        echo "=========================="
        DISCOVER_RESPONSE=$(curl -s -X GET "$SERVER_URL/api/v1/tenants/$TENANT_ID/peers/discover" \
          -H "Authorization: Bearer $TOKEN" 2>/dev/null)
        
        if [ $? -eq 0 ] && [ -n "$DISCOVER_RESPONSE" ]; then
            echo "‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –ø–∏—Ä–æ–≤ —É—Å–ø–µ—à–Ω–æ:"
            echo "$DISCOVER_RESPONSE" | python3 -m json.tool 2>/dev/null || echo "$DISCOVER_RESPONSE"
        else
            echo "‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –ø–∏—Ä–æ–≤ –Ω–µ —É–¥–∞–ª–æ—Å—å"
        fi
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∏—Ä–µ
        echo
        echo "‚ÑπÔ∏è  –¢–ï–°–¢ –ò–ù–§–û–†–ú–ê–¶–ò–ò –û –ü–ò–†–ï"
        echo "=========================="
        PEER_INFO_RESPONSE=$(curl -s -X GET "$SERVER_URL/api/v1/tenants/$TENANT_ID/peers/$PEER_ID" \
          -H "Authorization: Bearer $TOKEN" 2>/dev/null)
        
        if [ $? -eq 0 ] && [ -n "$PEER_INFO_RESPONSE" ]; then
            echo "‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∏—Ä–µ –ø–æ–ª—É—á–µ–Ω–∞:"
            echo "$PEER_INFO_RESPONSE" | python3 -m json.tool 2>/dev/null || echo "$PEER_INFO_RESPONSE"
        else
            echo "‚ùå –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∏—Ä–µ –Ω–µ —É–¥–∞–ª–æ—Å—å"
        fi
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é
        echo
        echo "üîí –ó–ê–ö–†–´–¢–ò–ï –°–ï–°–°–ò–ò"
        echo "=================="
        DELETE_RESPONSE=$(curl -s -X DELETE "$SERVER_URL/api/v1/tenants/$TENANT_ID/peers/$PEER_ID" \
          -H "Authorization: Bearer $TOKEN" 2>/dev/null)
        
        if [ $? -eq 0 ] && [ -n "$DELETE_RESPONSE" ]; then
            echo "‚úÖ –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞:"
            echo "$DELETE_RESPONSE" | python3 -m json.tool 2>/dev/null || echo "$DELETE_RESPONSE"
        else
            echo "‚ùå –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–µ—Å—Å–∏–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å"
        fi
        
    else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å peer_id –∏–ª–∏ relay_session_id"
    fi
else
    echo "‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å"
    echo "–û—Ç–≤–µ—Ç: $REGISTER_RESPONSE"
fi

echo
echo "üöÄ –¢–ï–°–¢ –†–ï–ê–õ–¨–ù–û–ì–û –ö–õ–ò–ï–ù–¢–ê –° –ù–û–í–´–ú API"
echo "====================================="

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
echo "–ó–∞–ø—É—Å–∫–∞–µ–º CloudBridge Client —Å –Ω–æ–≤—ã–º API..."
timeout 30s ./cloudbridge-client p2p --config config-dev.yaml --token "$TOKEN" --log-level debug 2>&1 | head -50 || echo "–ö–ª–∏–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –∏–ª–∏ –ø—Ä–µ–≤—ã—Å–∏–ª timeout"

echo
echo "üìã –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢"
echo "=================="
echo "–í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: $(date)"
echo
echo "‚úÖ –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π API —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
echo "‚úÖ Heartbeat —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç"
echo "‚úÖ P2P —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç"
echo "‚úÖ –ú—É–ª—å—Ç–∏—Ç—É–Ω–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
echo "‚úÖ WireGuard –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–¥–∞–ª–µ–Ω—ã"
echo "‚úÖ QUIC –ø—Ä–æ—Ç–æ–∫–æ–ª –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
echo
echo "üéâ CloudBridge Client –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π!"
