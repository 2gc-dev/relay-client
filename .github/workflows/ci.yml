name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GO_VERSION: '1.25'

jobs:
  lint_test_secure:
    name: Lint, Test, Security
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Verify go.mod tidy
        run: |
          go mod tidy
          git diff --exit-code -- go.mod go.sum

      - name: go vet
        run: go vet ./...

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest

      - name: Tests (race + coverage)
        run: go test -race -covermode=atomic -coverprofile=coverage.out ./...

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.sha }}
          path: coverage.out

      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest

      - name: Run govulncheck
        run: |
          "$(go env GOPATH)/bin/govulncheck" ./... || true

      - name: Gosec (SARIF)
        uses: securego/gosec@v2.22.0
        with:
          args: '-fmt sarif -out gosec.sarif ./...'

      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gosec.sarif

  snapshot_build:
    name: Snapshot build (GoReleaser)
    needs: lint_test_secure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          install-only: true

      - name: Build snapshot (no publish)
        run: goreleaser release --snapshot --clean --skip=publish

      - name: Upload snapshot artifacts
        uses: actions/upload-artifact@v4
        with:
          name: snapshot-${{ github.sha }}
          path: |
            dist/*.zip
            dist/*.tar.gz
            dist/checksums.txt
