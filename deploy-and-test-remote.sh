#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è P2P —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
# –¶–µ–ª—å: –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤—è–∑—å –º–µ–∂–¥—É –ª–æ–∫–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–æ–π –∏ —É–¥–∞–ª–µ–Ω–Ω—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º —á–µ—Ä–µ–∑ relay

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ P2P —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –º–µ–∂–¥—É —Å–µ—Ä–≤–µ—Ä–∞–º–∏"
echo "=============================================================="
echo "–õ–æ–∫–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞: $(hostname)"
echo "–£–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä: zabbix-server (212.233.79.160)"
echo "Relay —Å–µ—Ä–≤–µ—Ä: edge.2gc.ru"
echo "–í—Ä–µ–º—è: $(date)"
echo

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
if [ ! -f "cloudbridge-client-linux-amd64" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: cloudbridge-client-linux-amd64 –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "–°–Ω–∞—á–∞–ª–∞ —Å–∫–æ–º–ø–∏–ª–∏—Ä—É–π—Ç–µ –∫–ª–∏–µ–Ω—Ç –¥–ª—è Linux:"
    echo "GOOS=linux GOARCH=amd64 go build -o cloudbridge-client-linux-amd64 ./cmd/cloudbridge-client"
    exit 1
fi

if [ ! -f "token2-clean.txt" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: token2-clean.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

if [ ! -f "config-remote-server.yaml" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: config-remote-server.yaml –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

echo "‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã"

# –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
echo
echo "üì§ –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä..."
scp -F ~/.ssh/config cloudbridge-client-linux-amd64 zabbix-server:~/cloudbridge-client
scp -F ~/.ssh/config config-remote-server.yaml zabbix-server:~/config.yaml
scp -F ~/.ssh/config token2-clean.txt zabbix-server:~/token.txt

echo "‚úÖ –§–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä"

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
echo
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ..."
ssh -F ~/.ssh/config zabbix-server << 'EOF'
cd ~
chmod +x cloudbridge-client
echo "–ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ..."
./cloudbridge-client p2p --config config.yaml --token $(cat token.txt) --log-level debug > client-remote.log 2>&1 &
CLIENT_PID=$!
echo "Client PID: $CLIENT_PID"
echo $CLIENT_PID > client.pid
sleep 10
echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–∞..."
if ps -p $CLIENT_PID > /dev/null; then
    echo "‚úÖ –ö–ª–∏–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ (PID: $CLIENT_PID)"
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞:"
    tail -10 client-remote.log
else
    echo "‚ùå –ö–ª–∏–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ"
    echo "–õ–æ–≥ –æ—à–∏–±–æ–∫:"
    cat client-remote.log
fi
EOF

# –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
sleep 5

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ
echo
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ..."
TOKEN=$(cat token1-clean.txt)
./cloudbridge-client p2p --config config-test-quic.yaml --token "$TOKEN" --log-level debug > client-local.log 2>&1 &
LOCAL_CLIENT_PID=$!
echo "Local Client PID: $LOCAL_CLIENT_PID"

# –ñ–¥–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
echo
echo "‚è≥ –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–æ–≤
echo
echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–æ–≤..."
echo "================================"

echo "–õ–æ–∫–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç (PID: $LOCAL_CLIENT_PID):"
if ps -p $LOCAL_CLIENT_PID > /dev/null; then
    echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞:"
    tail -10 client-local.log
else
    echo "‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    echo "–õ–æ–≥ –æ—à–∏–±–æ–∫:"
    cat client-local.log
fi

echo
echo "–£–¥–∞–ª–µ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç:"
ssh -F ~/.ssh/config zabbix-server << 'EOF'
if [ -f client.pid ]; then
    CLIENT_PID=$(cat client.pid)
    if ps -p $CLIENT_PID > /dev/null; then
        echo "‚úÖ –£–¥–∞–ª–µ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç (PID: $CLIENT_PID)"
        echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞:"
        tail -10 client-remote.log
    else
        echo "‚ùå –£–¥–∞–ª–µ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        echo "–õ–æ–≥ –æ—à–∏–±–æ–∫:"
        cat client-remote.log
    fi
else
    echo "‚ùå PID —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi
EOF

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
echo
echo "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã..."
echo "=================================="

echo "–õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã —Å IP 10.x.x.x:"
ifconfig | grep -A 2 "inet 10\." || echo "–ù–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ —Å IP 10.x.x.x"

echo
echo "–£–¥–∞–ª–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã —Å IP 10.x.x.x:"
ssh -F ~/.ssh/config zabbix-server "ip addr show | grep -A 2 'inet 10\.' || echo '–ù–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ —Å IP 10.x.x.x'"

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–≤—è–∑—å –º–µ–∂–¥—É —Å–µ—Ä–≤–µ—Ä–∞–º–∏
echo
echo "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–≤—è–∑—å –º–µ–∂–¥—É —Å–µ—Ä–≤–µ—Ä–∞–º–∏..."
echo "====================================="

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç —Å–≤—è–∑–∏
cat > test-server-communication.py << 'EOF'
#!/usr/bin/env python3
import socket
import time
import json
import sys

def test_communication():
    print("üß™ –¢–µ—Å—Ç —Å–≤—è–∑–∏ –º–µ–∂–¥—É —Å–µ—Ä–≤–µ—Ä–∞–º–∏ —á–µ—Ä–µ–∑ relay...")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ relay
    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    sock.settimeout(10)
    
    try:
        # –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
        message = {
            "type": "server_test",
            "from": "local-server",
            "to": "remote-server",
            "message": "Hello from local server to remote server",
            "timestamp": time.time()
        }
        
        data = json.dumps(message).encode('utf-8')
        sock.sendto(data, ("edge.2gc.ru", 9090))
        print("‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ relay –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞")
        
        # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç
        try:
            response, addr = sock.recvfrom(1024)
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç {addr}: {response.decode('utf-8')[:100]}...")
            return True
        except socket.timeout:
            print("‚è∞ Timeout –ø—Ä–∏ –æ–∂–∏–¥–∞–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    finally:
        sock.close()

if __name__ == "__main__":
    test_communication()
EOF

python3 test-server-communication.py

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤
echo
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤..."
kill $LOCAL_CLIENT_PID 2>/dev/null || true
ssh -F ~/.ssh/config zabbix-server "if [ -f client.pid ]; then kill \$(cat client.pid) 2>/dev/null || true; fi"

# –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
echo
echo "üìã –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢"
echo "=================="
echo "–í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: $(date)"
echo
echo "–õ–æ–≥–∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞: client-local.log"
echo "–õ–æ–≥–∏ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ zabbix-server"
echo
echo "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:"
echo "  ssh -F ~/.ssh/config zabbix-server 'cat client-remote.log'"
echo
echo "–î–ª—è –ø–æ–∏—Å–∫–∞ –æ—à–∏–±–æ–∫:"
echo "  grep -i error client-local.log"
echo "  ssh -F ~/.ssh/config zabbix-server 'grep -i error client-remote.log'"

# –û—á–∏—Å—Ç–∫–∞
rm -f test-server-communication.py

echo
echo "‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!"


