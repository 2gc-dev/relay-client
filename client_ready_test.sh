#!/bin/bash

# –ì–æ—Ç–æ–≤—ã–π —Ç–µ—Å—Ç –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ - QUIC 9091
# –ü—Ä–æ—Å—Ç–æ–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π —Ç–µ—Å—Ç –±–µ–∑ —Å–ª–æ–∂–Ω–æ–π –∫–æ–º–ø–∏–ª—è—Ü–∏–∏

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
QUIC_HOST="109.120.180.160"
QUIC_PORT="9091"
API_HOST="edge.2gc.ru"
API_PORT="9444"

echo -e "${BLUE}üß™ –ì–æ—Ç–æ–≤—ã–π —Ç–µ—Å—Ç QUIC 9091 –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞${NC}"
echo -e "${BLUE}=====================================${NC}"

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ UDP –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
check_udp_connectivity() {
    echo -e "${BLUE}üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º UDP –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å $QUIC_HOST:$QUIC_PORT...${NC}"
    
    if nc -zvu "$QUIC_HOST" "$QUIC_PORT" 2>/dev/null; then
        echo -e "${GREEN}‚úÖ UDP –ø–æ—Ä—Ç $QUIC_HOST:$QUIC_PORT –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        return 0
    else
        echo -e "${RED}‚ùå UDP –ø–æ—Ä—Ç $QUIC_HOST:$QUIC_PORT –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
check_api_connectivity() {
    echo -e "${BLUE}üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º API –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å $API_HOST:$API_PORT...${NC}"
    
    if curl -s --connect-timeout 5 --insecure "https://$API_HOST:$API_PORT/health" >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ API $API_HOST:$API_PORT –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        return 0
    else
        echo -e "${YELLOW}‚ö†Ô∏è  API $API_HOST:$API_PORT –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ç–µ—Å—Ç)${NC}"
        return 0
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è UDP –æ—Ç–ø—Ä–∞–≤–∫–∏
test_udp_send() {
    echo -e "${BLUE}üì§ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É UDP –ø–∞–∫–µ—Ç–∞...${NC}"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    echo "QUIC test message from client $(date)" | nc -u "$QUIC_HOST" "$QUIC_PORT" 2>/dev/null || true
    
    echo -e "${GREEN}‚úÖ UDP –ø–∞–∫–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω${NC}"
    echo -e "${YELLOW}‚ÑπÔ∏è  –ï—Å–ª–∏ QUIC —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ–Ω –¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å –ø–∞–∫–µ—Ç${NC}"
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
create_correct_token() {
    echo -e "${BLUE}üîë –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π JWT —Ç–æ–∫–µ–Ω...${NC}"
    
    cat > token_correct.txt << 'TOKEN_EOF'
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhY2NvdW50IiwiY29ubmVjdGlvbl90eXBlIjoicXVpYyIsImV4cCI6MTc1ODM2NTQ3MywiaWF0IjoxNzU4Mjc5MDczLCJpc3MiOiJodHRwczovL2F1dGguMmdjLnJ1L3JlYWxtcy9jbG91ZGJyaWRnZSIsImp0aSI6Imp3dF90ZXN0X3Rva2VuIiwicGVybWlzc2lvbnMiOlsicDJwX2Nvbm5lY3QiLCJtZXNoX2pvaW4iLCJtZXNoX21hbmFnZSJdLCJwcm90b2NvbF90eXBlIjoicDJwLW1lc2giLCJzY29wZSI6InAycC1tZXNoLWNsYWltcyIsInNlcnZlcl9pZCI6InNlcnZlci10ZXN0LTEyMyIsInN1YiI6InNlcnZlci10ZXN0LTEyMyIsInRlbmFudF9pZCI6InRlbmFudC10ZXN0LTEyMyJ9.AE4OkW-dvrKnAa1XH18td5AWnQZmkXCPTx0FNOomnx4
TOKEN_EOF
    
    echo -e "${GREEN}‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω: token_correct.txt${NC}"
    echo -e "${YELLOW}‚ÑπÔ∏è  –≠—Ç–æ—Ç —Ç–æ–∫–µ–Ω –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç aud: 'account' (—Å—Ç—Ä–æ–∫–∞)${NC}"
}

# –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å Go –∫–ª–∏–µ–Ω—Ç–æ–º (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
test_with_go_client() {
    echo -e "${BLUE}üî® –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–±—Ä–∞—Ç—å Go –∫–ª–∏–µ–Ω—Ç...${NC}"
    
    if command -v go >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Go –Ω–∞–π–¥–µ–Ω, –≤–µ—Ä—Å–∏—è: $(go version)${NC}"
        
        # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–±—Ä–∞—Ç—å external_client
        if go build -o external_client_test external_client.go 2>/dev/null; then
            echo -e "${GREEN}‚úÖ Go –∫–ª–∏–µ–Ω—Ç —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ${NC}"
            
            echo -e "${BLUE}üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º QUIC –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å Go –∫–ª–∏–µ–Ω—Ç–æ–º...${NC}"
            if ./external_client_test \
                --host="$QUIC_HOST" \
                --port="$QUIC_PORT" \
                --token="$(cat token_correct.txt)" \
                --timeout=30s; then
                echo -e "${GREEN}üéâ QUIC –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!${NC}"
                return 0
            else
                echo -e "${YELLOW}‚ö†Ô∏è  QUIC –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, –Ω–æ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ${NC}"
                return 1
            fi
        else
            echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å Go –∫–ª–∏–µ–Ω—Ç (–ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –Ω–µ–≥–æ)${NC}"
            return 1
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Go –Ω–µ –Ω–∞–π–¥–µ–Ω (–ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ Go –∫–ª–∏–µ–Ω—Ç–∞)${NC}"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${BLUE}üéØ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
    create_correct_token
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
    if ! check_udp_connectivity; then
        echo -e "${RED}‚ùå UDP –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç—å –∏ LoadBalancer${NC}"
        exit 1
    fi
    
    check_api_connectivity
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º UDP –æ—Ç–ø—Ä–∞–≤–∫—É
    test_udp_send
    
    # –ü—ã—Ç–∞–µ–º—Å—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å Go –∫–ª–∏–µ–Ω—Ç–æ–º
    if test_with_go_client; then
        echo -e "${GREEN}üéâ –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω!${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω (Go –∫–ª–∏–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)${NC}"
    fi
    
    # –û—á–∏—Å—Ç–∫–∞
    rm -f token_correct.txt external_client_test 2>/dev/null || true
    
    echo -e "${BLUE}=====================================${NC}"
    echo -e "${GREEN}‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω${NC}"
    echo -e "${YELLOW}‚ÑπÔ∏è  UDP –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞${NC}"
    echo -e "${YELLOW}‚ÑπÔ∏è  LoadBalancer –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å${NC}"
    echo -e "${BLUE}üìã –î–ª—è –ø–æ–ª–Ω–æ–≥–æ QUIC —Ç–µ—Å—Ç–∞ –Ω—É–∂–µ–Ω Go –∫–ª–∏–µ–Ω—Ç${NC}"
}

# –ó–∞–ø—É—Å–∫
main "$@"
