#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–±–æ—Ä–∫–∏

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_info "üöÄ –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CloudBridge Client"
echo "=============================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if ! command -v go &> /dev/null; then
    log_error "Go –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Go –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
    exit 1
fi

if ! command -v make &> /dev/null; then
    log_warning "Make –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º—É—é —Å–±–æ—Ä–∫—É."
    USE_MAKE=false
else
    USE_MAKE=true
fi

log_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"

# –°–±–æ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏
log_info "–°–±–æ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏..."
if [ "$USE_MAKE" = true ]; then
    make build-test VERSION=test-$(date +%Y%m%d-%H%M%S)
else
    chmod +x scripts/build-with-config.sh
    ./scripts/build-with-config.sh \
        --os $(go env GOOS) \
        --arch $(go env GOARCH) \
        --type test \
        --version "test-$(date +%Y%m%d-%H%M%S)" \
        --output-dir dist
fi

if [[ $? -eq 0 ]]; then
    log_success "–°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
else
    log_error "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏"
    exit 1
fi

# –ü–æ–∏—Å–∫ —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
BINARY_PATH=$(find dist -name "cloudbridge-client-*" -type f -not -name "*.tar.gz" | head -1)
if [[ -z "$BINARY_PATH" ]]; then
    log_error "–°–æ–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

log_info "–ù–∞–π–¥–µ–Ω –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª: $BINARY_PATH"

# –¢–µ—Å—Ç –≤–µ—Ä—Å–∏–∏
log_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã version..."
"$BINARY_PATH" version

if [[ $? -eq 0 ]]; then
    log_success "–ö–æ–º–∞–Ω–¥–∞ version —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    log_error "–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã version"
    exit 1
fi

# –¢–µ—Å—Ç help
log_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã help..."
"$BINARY_PATH" --help > /dev/null

if [[ $? -eq 0 ]]; then
    log_success "–ö–æ–º–∞–Ω–¥–∞ help —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    log_error "–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã help"
    exit 1
fi

# –¢–µ—Å—Ç P2P –∫–æ–º–∞–Ω–¥—ã (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è)
log_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ P2P –∫–æ–º–∞–Ω–¥—ã..."
"$BINARY_PATH" p2p --help > /dev/null

if [[ $? -eq 0 ]]; then
    log_success "P2P –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    log_error "–û—à–∏–±–∫–∞ P2P –∫–æ–º–∞–Ω–¥—ã"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
FILE_SIZE=$(du -h "$BINARY_PATH" | cut -f1)
log_info "–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: $FILE_SIZE"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–∞–π–ª–∞..."
if command -v ldd &> /dev/null; then
    ldd "$BINARY_PATH" 2>/dev/null || log_info "–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª"
elif command -v otool &> /dev/null; then
    otool -L "$BINARY_PATH" 2>/dev/null || log_info "–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª"
else
    log_info "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (ldd/otool –Ω–µ –Ω–∞–π–¥–µ–Ω)"
fi

# –ü–æ–∏—Å–∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
CONFIG_PATH=$(find dist -name "config-*.yaml" | head -1)
if [[ -n "$CONFIG_PATH" ]]; then
    log_info "–ù–∞–π–¥–µ–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª: $CONFIG_PATH"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    if grep -q "demo-secret-key-for-testing-only" "$CONFIG_PATH"; then
        log_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"
    else
        log_warning "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"
    fi
else
    log_warning "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü–æ–∏—Å–∫ –ø–∞–∫–µ—Ç–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
PACKAGE_PATH=$(find dist -name "*.tar.gz" | head -1)
if [[ -n "$PACKAGE_PATH" ]]; then
    log_info "–ù–∞–π–¥–µ–Ω –ø–∞–∫–µ—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è: $PACKAGE_PATH"
    PACKAGE_SIZE=$(du -h "$PACKAGE_PATH" | cut -f1)
    log_info "–†–∞–∑–º–µ—Ä –ø–∞–∫–µ—Ç–∞: $PACKAGE_SIZE"
else
    log_warning "–ü–∞–∫–µ—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
log_success "üéâ –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
echo "=============================================="
echo "–ë–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª: $BINARY_PATH"
if [[ -n "$CONFIG_PATH" ]]; then
    echo "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: $CONFIG_PATH"
fi
if [[ -n "$PACKAGE_PATH" ]]; then
    echo "–ü–∞–∫–µ—Ç: $PACKAGE_PATH"
fi
echo "=============================================="
echo ""
echo "–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:"
echo "1. –ü–æ–ª—É—á–∏—Ç–µ JWT —Ç–æ–∫–µ–Ω –æ—Ç DevOps –∫–æ–º–∞–Ω–¥—ã"
echo "2. –°–æ–∑–¥–∞–π—Ç–µ config.yaml —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"
echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: $BINARY_PATH p2p --token YOUR_TOKEN --config config.yaml"
echo ""
