#!/bin/bash

# E2E —Ç–µ—Å—Ç –¥–ª—è QUIC 9091
# –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π —Ñ–ª–æ—É: Register -> Discover -> QUIC Dial -> AUTH -> TO message

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
QUIC_HOST="109.120.180.160"
QUIC_PORT="9091"
API_HOST="edge.2gc.ru"
API_PORT="9444"
TOKEN_FILE="token-valid.txt"

# –°–æ–∑–¥–∞–µ–º –≤–∞–ª–∏–¥–Ω—ã–π —Ç–æ–∫–µ–Ω
create_valid_token() {
    echo -e "${BLUE}üîë –°–æ–∑–¥–∞–µ–º –≤–∞–ª–∏–¥–Ω—ã–π JWT —Ç–æ–∫–µ–Ω...${NC}"
    
    # –í–∞–ª–∏–¥–Ω—ã–π —Ç–æ–∫–µ–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Å–µ–∫—Ä–µ—Ç–æ–º
    cat > "$TOKEN_FILE" << 'EOF'
eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiYWNjb3VudCJdLCJjb25uZWN0aW9uX3R5cGUiOiJxdWljIiwiZXhwIjoxNzU4MzY1NDczLCJpYXQiOjE3NTgyNzkwNzMsImlzcyI6Imh0dHBzOi8vYXV0aC4yZ2MucnUvcmVhbG1zL2Nsb3VkYnJpZGdlIiwianRpIjoiand0X3Rlc3RfdG9rZW4iLCJwZXJtaXNzaW9ucyI6WyJwMnBfY29ubmVjdCIsIm1lc2hfam9pbiIsIm1lc2hfbWFuYWdlIl0sInByb3RvY29sX3R5cGUiOiJwMnAtbWVzaCIsInNjb3BlIjoicDJwLW1lc2gtY2xhaW1zIiwic2VydmVyX2lkIjoic2VydmVyLXRlc3QtMTIzIiwic3ViIjoic2VydmVyLXRlc3QtMTIzIiwidGVuYW50X2lkIjoidGVuYW50LXRlc3QtMTIzIn0.2ePguI9tijf1holYraallqe955sHcKi0lndB1zb7OiA
EOF
    
    echo -e "${GREEN}‚úÖ –¢–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω: $TOKEN_FILE${NC}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å UDP –ø–æ—Ä—Ç–∞
check_udp_connectivity() {
    echo -e "${BLUE}üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º UDP –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å $QUIC_HOST:$QUIC_PORT...${NC}"
    
    if nc -zvu "$QUIC_HOST" "$QUIC_PORT" 2>/dev/null; then
        echo -e "${GREEN}‚úÖ UDP –ø–æ—Ä—Ç –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        return 0
    else
        echo -e "${RED}‚ùå UDP –ø–æ—Ä—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
check_api_connectivity() {
    echo -e "${BLUE}üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º API –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å $API_HOST:$API_PORT...${NC}"
    
    if curl -s --connect-timeout 5 --insecure "https://$API_HOST:$API_PORT/health" >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        return 0
    else
        echo -e "${YELLOW}‚ö†Ô∏è  API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ç–µ—Å—Ç${NC}"
        return 0  # –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º —Ç–µ—Å—Ç
    fi
}

# –°–æ–±–∏—Ä–∞–µ–º quic-tester
build_quic_tester() {
    echo -e "${BLUE}üî® –°–æ–±–∏—Ä–∞–µ–º quic-tester...${NC}"
    
    if go build -o bin/quic-tester ./cmd/quic-tester; then
        echo -e "${GREEN}‚úÖ quic-tester —Å–æ–±—Ä–∞–Ω${NC}"
        return 0
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ quic-tester${NC}"
        return 1
    fi
}

# –¢–µ—Å—Ç–∏—Ä—É–µ–º QUIC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
test_quic_connection() {
    echo -e "${BLUE}üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º QUIC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ...${NC}"
    
    # –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    echo -e "${YELLOW}üì§ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è...${NC}"
    if ./bin/quic-tester \
        --mode=send \
        --token-file="$TOKEN_FILE" \
        --host="$QUIC_HOST" \
        --port="$QUIC_PORT" \
        --to="peer_server-1758276186397" \
        --msg="E2E test message" \
        --timeout=30s; then
        echo -e "${GREEN}‚úÖ QUIC –æ—Ç–ø—Ä–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞${NC}"
        return 0
    else
        echo -e "${RED}‚ùå QUIC –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ—É—Å–ø–µ—à–Ω–∞${NC}"
        return 1
    fi
}

# –¢–µ—Å—Ç–∏—Ä—É–µ–º QUIC –ø—Ä–∏–µ–º
test_quic_receiver() {
    echo -e "${BLUE}üì• –¢–µ—Å—Ç–∏—Ä—É–µ–º QUIC –ø—Ä–∏–µ–º...${NC}"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º receiver –≤ —Ñ–æ–Ω–µ
    ./bin/quic-tester \
        --mode=recv \
        --token-file="$TOKEN_FILE" \
        --host="$QUIC_HOST" \
        --port="$QUIC_PORT" \
        --timeout=30s &
    
    RECEIVER_PID=$!
    sleep 2
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    echo -e "${YELLOW}üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...${NC}"
    ./bin/quic-tester \
        --mode=send \
        --token-file="$TOKEN_FILE" \
        --host="$QUIC_HOST" \
        --port="$QUIC_PORT" \
        --to="peer_server-1758276186397" \
        --msg="E2E receiver test" \
        --timeout=30s
    
    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è receiver
    wait $RECEIVER_PID 2>/dev/null || true
    
    echo -e "${GREEN}‚úÖ QUIC –ø—Ä–∏–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω${NC}"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${BLUE}üß™ E2E —Ç–µ—Å—Ç –¥–ª—è QUIC 9091${NC}"
    echo -e "${BLUE}================================${NC}"
    
    # –°–æ–∑–¥–∞–µ–º —Ç–æ–∫–µ–Ω
    create_valid_token
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
    if ! check_udp_connectivity; then
        echo -e "${RED}‚ùå UDP –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —Ç–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω${NC}"
        exit 1
    fi
    
    check_api_connectivity
    
    # –°–æ–±–∏—Ä–∞–µ–º quic-tester
    if ! build_quic_tester; then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏, —Ç–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω${NC}"
        exit 1
    fi
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º QUIC
    if test_quic_connection; then
        echo -e "${GREEN}üéâ E2E —Ç–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω!${NC}"
        echo -e "${GREEN}‚úÖ QUIC 9091 —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
    else
        echo -e "${RED}‚ùå E2E —Ç–µ—Å—Ç –Ω–µ—É—Å–ø–µ—à–µ–Ω${NC}"
        echo -e "${RED}‚ùå QUIC 9091 –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
        exit 1
    fi
    
    # –û—á–∏—Å—Ç–∫–∞
    rm -f "$TOKEN_FILE"
    
    echo -e "${BLUE}================================${NC}"
    echo -e "${GREEN}üèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω${NC}"
}

# –ó–∞–ø—É—Å–∫
main "$@"
