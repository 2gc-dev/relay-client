// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: pkg/relay/transport/proto/tunnel.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PacketType defines the type of data packet
type PacketType int32

const (
	PacketType_DATA      PacketType = 0
	PacketType_CONTROL   PacketType = 1
	PacketType_HEARTBEAT PacketType = 2
	PacketType_ERROR     PacketType = 3
)

// Enum value maps for PacketType.
var (
	PacketType_name = map[int32]string{
		0: "DATA",
		1: "CONTROL",
		2: "HEARTBEAT",
		3: "ERROR",
	}
	PacketType_value = map[string]int32{
		"DATA":      0,
		"CONTROL":   1,
		"HEARTBEAT": 2,
		"ERROR":     3,
	}
)

func (x PacketType) Enum() *PacketType {
	p := new(PacketType)
	*p = x
	return p
}

func (x PacketType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PacketType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_relay_transport_proto_tunnel_proto_enumTypes[0].Descriptor()
}

func (PacketType) Type() protoreflect.EnumType {
	return &file_pkg_relay_transport_proto_tunnel_proto_enumTypes[0]
}

func (x PacketType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PacketType.Descriptor instead.
func (PacketType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_relay_transport_proto_tunnel_proto_rawDescGZIP(), []int{0}
}

// CreateTunnelRequest contains tunnel creation parameters
type CreateTunnelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TunnelId      string                 `protobuf:"bytes,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	LocalPort     int32                  `protobuf:"varint,3,opt,name=local_port,json=localPort,proto3" json:"local_port,omitempty"`
	RemoteHost    string                 `protobuf:"bytes,4,opt,name=remote_host,json=remoteHost,proto3" json:"remote_host,omitempty"`
	RemotePort    int32                  `protobuf:"varint,5,opt,name=remote_port,json=remotePort,proto3" json:"remote_port,omitempty"`
	Config        *TunnelConfig          `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTunnelRequest) Reset() {
	*x = CreateTunnelRequest{}
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTunnelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTunnelRequest) ProtoMessage() {}

func (x *CreateTunnelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTunnelRequest.ProtoReflect.Descriptor instead.
func (*CreateTunnelRequest) Descriptor() ([]byte, []int) {
	return file_pkg_relay_transport_proto_tunnel_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTunnelRequest) GetTunnelId() string {
	if x != nil {
		return x.TunnelId
	}
	return ""
}

func (x *CreateTunnelRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *CreateTunnelRequest) GetLocalPort() int32 {
	if x != nil {
		return x.LocalPort
	}
	return 0
}

func (x *CreateTunnelRequest) GetRemoteHost() string {
	if x != nil {
		return x.RemoteHost
	}
	return ""
}

func (x *CreateTunnelRequest) GetRemotePort() int32 {
	if x != nil {
		return x.RemotePort
	}
	return 0
}

func (x *CreateTunnelRequest) GetConfig() *TunnelConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CreateTunnelRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// CreateTunnelResponse contains tunnel creation result
type CreateTunnelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	TunnelId      string                 `protobuf:"bytes,2,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	Endpoint      string                 `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	TunnelInfo    *TunnelInfo            `protobuf:"bytes,4,opt,name=tunnel_info,json=tunnelInfo,proto3" json:"tunnel_info,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTunnelResponse) Reset() {
	*x = CreateTunnelResponse{}
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTunnelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTunnelResponse) ProtoMessage() {}

func (x *CreateTunnelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTunnelResponse.ProtoReflect.Descriptor instead.
func (*CreateTunnelResponse) Descriptor() ([]byte, []int) {
	return file_pkg_relay_transport_proto_tunnel_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTunnelResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateTunnelResponse) GetTunnelId() string {
	if x != nil {
		return x.TunnelId
	}
	return ""
}

func (x *CreateTunnelResponse) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *CreateTunnelResponse) GetTunnelInfo() *TunnelInfo {
	if x != nil {
		return x.TunnelInfo
	}
	return nil
}

func (x *CreateTunnelResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// CloseTunnelRequest contains tunnel closure parameters
type CloseTunnelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TunnelId      string                 `protobuf:"bytes,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Force         bool                   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseTunnelRequest) Reset() {
	*x = CloseTunnelRequest{}
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseTunnelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTunnelRequest) ProtoMessage() {}

func (x *CloseTunnelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTunnelRequest.ProtoReflect.Descriptor instead.
func (*CloseTunnelRequest) Descriptor() ([]byte, []int) {
	return file_pkg_relay_transport_proto_tunnel_proto_rawDescGZIP(), []int{2}
}

func (x *CloseTunnelRequest) GetTunnelId() string {
	if x != nil {
		return x.TunnelId
	}
	return ""
}

func (x *CloseTunnelRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *CloseTunnelRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

// CloseTunnelResponse contains tunnel closure result
type CloseTunnelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	TunnelId      string                 `protobuf:"bytes,2,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseTunnelResponse) Reset() {
	*x = CloseTunnelResponse{}
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseTunnelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTunnelResponse) ProtoMessage() {}

func (x *CloseTunnelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTunnelResponse.ProtoReflect.Descriptor instead.
func (*CloseTunnelResponse) Descriptor() ([]byte, []int) {
	return file_pkg_relay_transport_proto_tunnel_proto_rawDescGZIP(), []int{3}
}

func (x *CloseTunnelResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CloseTunnelResponse) GetTunnelId() string {
	if x != nil {
		return x.TunnelId
	}
	return ""
}

func (x *CloseTunnelResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// ListTunnelsRequest requests list of tunnels
type ListTunnelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Filter        string                 `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTunnelsRequest) Reset() {
	*x = ListTunnelsRequest{}
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTunnelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTunnelsRequest) ProtoMessage() {}

func (x *ListTunnelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTunnelsRequest.ProtoReflect.Descriptor instead.
func (*ListTunnelsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_relay_transport_proto_tunnel_proto_rawDescGZIP(), []int{4}
}

func (x *ListTunnelsRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ListTunnelsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// ListTunnelsResponse contains list of tunnels
type ListTunnelsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tunnels       []*TunnelInfo          `protobuf:"bytes,1,rep,name=tunnels,proto3" json:"tunnels,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTunnelsResponse) Reset() {
	*x = ListTunnelsResponse{}
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTunnelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTunnelsResponse) ProtoMessage() {}

func (x *ListTunnelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTunnelsResponse.ProtoReflect.Descriptor instead.
func (*ListTunnelsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_relay_transport_proto_tunnel_proto_rawDescGZIP(), []int{5}
}

func (x *ListTunnelsResponse) GetTunnels() []*TunnelInfo {
	if x != nil {
		return x.Tunnels
	}
	return nil
}

func (x *ListTunnelsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListTunnelsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// TunnelStatusRequest requests tunnel status
type TunnelStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TunnelId      string                 `protobuf:"bytes,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TunnelStatusRequest) Reset() {
	*x = TunnelStatusRequest{}
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TunnelStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelStatusRequest) ProtoMessage() {}

func (x *TunnelStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelStatusRequest.ProtoReflect.Descriptor instead.
func (*TunnelStatusRequest) Descriptor() ([]byte, []int) {
	return file_pkg_relay_transport_proto_tunnel_proto_rawDescGZIP(), []int{6}
}

func (x *TunnelStatusRequest) GetTunnelId() string {
	if x != nil {
		return x.TunnelId
	}
	return ""
}

func (x *TunnelStatusRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// TunnelStatusResponse contains tunnel status
type TunnelStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	TunnelInfo    *TunnelInfo            `protobuf:"bytes,2,opt,name=tunnel_info,json=tunnelInfo,proto3" json:"tunnel_info,omitempty"`
	Stats         *TunnelStats           `protobuf:"bytes,3,opt,name=stats,proto3" json:"stats,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TunnelStatusResponse) Reset() {
	*x = TunnelStatusResponse{}
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TunnelStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelStatusResponse) ProtoMessage() {}

func (x *TunnelStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelStatusResponse.ProtoReflect.Descriptor instead.
func (*TunnelStatusResponse) Descriptor() ([]byte, []int) {
	return file_pkg_relay_transport_proto_tunnel_proto_rawDescGZIP(), []int{7}
}

func (x *TunnelStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TunnelStatusResponse) GetTunnelInfo() *TunnelInfo {
	if x != nil {
		return x.TunnelInfo
	}
	return nil
}

func (x *TunnelStatusResponse) GetStats() *TunnelStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *TunnelStatusResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// DataPacket represents a data packet in the tunnel
type DataPacket struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TunnelId       string                 `protobuf:"bytes,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	Data           []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	SequenceNumber int64                  `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PacketType     PacketType             `protobuf:"varint,5,opt,name=packet_type,json=packetType,proto3,enum=relay.v1.PacketType" json:"packet_type,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DataPacket) Reset() {
	*x = DataPacket{}
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPacket) ProtoMessage() {}

func (x *DataPacket) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPacket.ProtoReflect.Descriptor instead.
func (*DataPacket) Descriptor() ([]byte, []int) {
	return file_pkg_relay_transport_proto_tunnel_proto_rawDescGZIP(), []int{8}
}

func (x *DataPacket) GetTunnelId() string {
	if x != nil {
		return x.TunnelId
	}
	return ""
}

func (x *DataPacket) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DataPacket) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *DataPacket) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DataPacket) GetPacketType() PacketType {
	if x != nil {
		return x.PacketType
	}
	return PacketType_DATA
}

// TunnelConfig contains tunnel configuration
type TunnelConfig struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	BufferSize         int32                  `protobuf:"varint,1,opt,name=buffer_size,json=bufferSize,proto3" json:"buffer_size,omitempty"`
	MaxBuffers         int32                  `protobuf:"varint,2,opt,name=max_buffers,json=maxBuffers,proto3" json:"max_buffers,omitempty"`
	TimeoutSeconds     int32                  `protobuf:"varint,3,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	CompressionEnabled bool                   `protobuf:"varint,4,opt,name=compression_enabled,json=compressionEnabled,proto3" json:"compression_enabled,omitempty"`
	EncryptionEnabled  bool                   `protobuf:"varint,5,opt,name=encryption_enabled,json=encryptionEnabled,proto3" json:"encryption_enabled,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TunnelConfig) Reset() {
	*x = TunnelConfig{}
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TunnelConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelConfig) ProtoMessage() {}

func (x *TunnelConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelConfig.ProtoReflect.Descriptor instead.
func (*TunnelConfig) Descriptor() ([]byte, []int) {
	return file_pkg_relay_transport_proto_tunnel_proto_rawDescGZIP(), []int{9}
}

func (x *TunnelConfig) GetBufferSize() int32 {
	if x != nil {
		return x.BufferSize
	}
	return 0
}

func (x *TunnelConfig) GetMaxBuffers() int32 {
	if x != nil {
		return x.MaxBuffers
	}
	return 0
}

func (x *TunnelConfig) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *TunnelConfig) GetCompressionEnabled() bool {
	if x != nil {
		return x.CompressionEnabled
	}
	return false
}

func (x *TunnelConfig) GetEncryptionEnabled() bool {
	if x != nil {
		return x.EncryptionEnabled
	}
	return false
}

// TunnelInfo contains tunnel information
type TunnelInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TunnelId      string                 `protobuf:"bytes,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	LocalPort     int32                  `protobuf:"varint,3,opt,name=local_port,json=localPort,proto3" json:"local_port,omitempty"`
	RemoteHost    string                 `protobuf:"bytes,4,opt,name=remote_host,json=remoteHost,proto3" json:"remote_host,omitempty"`
	RemotePort    int32                  `protobuf:"varint,5,opt,name=remote_port,json=remotePort,proto3" json:"remote_port,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastActivity  *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_activity,json=lastActivity,proto3" json:"last_activity,omitempty"`
	Config        *TunnelConfig          `protobuf:"bytes,9,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TunnelInfo) Reset() {
	*x = TunnelInfo{}
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TunnelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelInfo) ProtoMessage() {}

func (x *TunnelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelInfo.ProtoReflect.Descriptor instead.
func (*TunnelInfo) Descriptor() ([]byte, []int) {
	return file_pkg_relay_transport_proto_tunnel_proto_rawDescGZIP(), []int{10}
}

func (x *TunnelInfo) GetTunnelId() string {
	if x != nil {
		return x.TunnelId
	}
	return ""
}

func (x *TunnelInfo) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *TunnelInfo) GetLocalPort() int32 {
	if x != nil {
		return x.LocalPort
	}
	return 0
}

func (x *TunnelInfo) GetRemoteHost() string {
	if x != nil {
		return x.RemoteHost
	}
	return ""
}

func (x *TunnelInfo) GetRemotePort() int32 {
	if x != nil {
		return x.RemotePort
	}
	return 0
}

func (x *TunnelInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TunnelInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TunnelInfo) GetLastActivity() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivity
	}
	return nil
}

func (x *TunnelInfo) GetConfig() *TunnelConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// TunnelStats contains tunnel statistics
type TunnelStats struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BytesSent       int64                  `protobuf:"varint,1,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	BytesReceived   int64                  `protobuf:"varint,2,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	PacketsSent     int64                  `protobuf:"varint,3,opt,name=packets_sent,json=packetsSent,proto3" json:"packets_sent,omitempty"`
	PacketsReceived int64                  `protobuf:"varint,4,opt,name=packets_received,json=packetsReceived,proto3" json:"packets_received,omitempty"`
	Errors          int64                  `protobuf:"varint,5,opt,name=errors,proto3" json:"errors,omitempty"`
	LastReset       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_reset,json=lastReset,proto3" json:"last_reset,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TunnelStats) Reset() {
	*x = TunnelStats{}
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TunnelStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelStats) ProtoMessage() {}

func (x *TunnelStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_relay_transport_proto_tunnel_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelStats.ProtoReflect.Descriptor instead.
func (*TunnelStats) Descriptor() ([]byte, []int) {
	return file_pkg_relay_transport_proto_tunnel_proto_rawDescGZIP(), []int{11}
}

func (x *TunnelStats) GetBytesSent() int64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *TunnelStats) GetBytesReceived() int64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *TunnelStats) GetPacketsSent() int64 {
	if x != nil {
		return x.PacketsSent
	}
	return 0
}

func (x *TunnelStats) GetPacketsReceived() int64 {
	if x != nil {
		return x.PacketsReceived
	}
	return 0
}

func (x *TunnelStats) GetErrors() int64 {
	if x != nil {
		return x.Errors
	}
	return 0
}

func (x *TunnelStats) GetLastReset() *timestamppb.Timestamp {
	if x != nil {
		return x.LastReset
	}
	return nil
}

var File_pkg_relay_transport_proto_tunnel_proto protoreflect.FileDescriptor

const file_pkg_relay_transport_proto_tunnel_proto_rawDesc = "" +
	"\n" +
	"&pkg/relay/transport/proto/tunnel.proto\x12\brelay.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x9a\x02\n" +
	"\x13CreateTunnelRequest\x12\x1b\n" +
	"\ttunnel_id\x18\x01 \x01(\tR\btunnelId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12\x1d\n" +
	"\n" +
	"local_port\x18\x03 \x01(\x05R\tlocalPort\x12\x1f\n" +
	"\vremote_host\x18\x04 \x01(\tR\n" +
	"remoteHost\x12\x1f\n" +
	"\vremote_port\x18\x05 \x01(\x05R\n" +
	"remotePort\x12.\n" +
	"\x06config\x18\x06 \x01(\v2\x16.relay.v1.TunnelConfigR\x06config\x128\n" +
	"\ttimestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xc3\x01\n" +
	"\x14CreateTunnelResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1b\n" +
	"\ttunnel_id\x18\x02 \x01(\tR\btunnelId\x12\x1a\n" +
	"\bendpoint\x18\x03 \x01(\tR\bendpoint\x125\n" +
	"\vtunnel_info\x18\x04 \x01(\v2\x14.relay.v1.TunnelInfoR\n" +
	"tunnelInfo\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\"d\n" +
	"\x12CloseTunnelRequest\x12\x1b\n" +
	"\ttunnel_id\x18\x01 \x01(\tR\btunnelId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12\x14\n" +
	"\x05force\x18\x03 \x01(\bR\x05force\"o\n" +
	"\x13CloseTunnelResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1b\n" +
	"\ttunnel_id\x18\x02 \x01(\tR\btunnelId\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"I\n" +
	"\x12ListTunnelsRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x16\n" +
	"\x06filter\x18\x02 \x01(\tR\x06filter\"\x8b\x01\n" +
	"\x13ListTunnelsResponse\x12.\n" +
	"\atunnels\x18\x01 \x03(\v2\x14.relay.v1.TunnelInfoR\atunnels\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"O\n" +
	"\x13TunnelStatusRequest\x12\x1b\n" +
	"\ttunnel_id\x18\x01 \x01(\tR\btunnelId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\"\xb7\x01\n" +
	"\x14TunnelStatusResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x125\n" +
	"\vtunnel_info\x18\x02 \x01(\v2\x14.relay.v1.TunnelInfoR\n" +
	"tunnelInfo\x12+\n" +
	"\x05stats\x18\x03 \x01(\v2\x15.relay.v1.TunnelStatsR\x05stats\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"\xd7\x01\n" +
	"\n" +
	"DataPacket\x12\x1b\n" +
	"\ttunnel_id\x18\x01 \x01(\tR\btunnelId\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12'\n" +
	"\x0fsequence_number\x18\x03 \x01(\x03R\x0esequenceNumber\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x125\n" +
	"\vpacket_type\x18\x05 \x01(\x0e2\x14.relay.v1.PacketTypeR\n" +
	"packetType\"\xd9\x01\n" +
	"\fTunnelConfig\x12\x1f\n" +
	"\vbuffer_size\x18\x01 \x01(\x05R\n" +
	"bufferSize\x12\x1f\n" +
	"\vmax_buffers\x18\x02 \x01(\x05R\n" +
	"maxBuffers\x12'\n" +
	"\x0ftimeout_seconds\x18\x03 \x01(\x05R\x0etimeoutSeconds\x12/\n" +
	"\x13compression_enabled\x18\x04 \x01(\bR\x12compressionEnabled\x12-\n" +
	"\x12encryption_enabled\x18\x05 \x01(\bR\x11encryptionEnabled\"\xeb\x02\n" +
	"\n" +
	"TunnelInfo\x12\x1b\n" +
	"\ttunnel_id\x18\x01 \x01(\tR\btunnelId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12\x1d\n" +
	"\n" +
	"local_port\x18\x03 \x01(\x05R\tlocalPort\x12\x1f\n" +
	"\vremote_host\x18\x04 \x01(\tR\n" +
	"remoteHost\x12\x1f\n" +
	"\vremote_port\x18\x05 \x01(\x05R\n" +
	"remotePort\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12?\n" +
	"\rlast_activity\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\flastActivity\x12.\n" +
	"\x06config\x18\t \x01(\v2\x16.relay.v1.TunnelConfigR\x06config\"\xf4\x01\n" +
	"\vTunnelStats\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\x01 \x01(\x03R\tbytesSent\x12%\n" +
	"\x0ebytes_received\x18\x02 \x01(\x03R\rbytesReceived\x12!\n" +
	"\fpackets_sent\x18\x03 \x01(\x03R\vpacketsSent\x12)\n" +
	"\x10packets_received\x18\x04 \x01(\x03R\x0fpacketsReceived\x12\x16\n" +
	"\x06errors\x18\x05 \x01(\x03R\x06errors\x129\n" +
	"\n" +
	"last_reset\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tlastReset*=\n" +
	"\n" +
	"PacketType\x12\b\n" +
	"\x04DATA\x10\x00\x12\v\n" +
	"\aCONTROL\x10\x01\x12\r\n" +
	"\tHEARTBEAT\x10\x02\x12\t\n" +
	"\x05ERROR\x10\x032\x86\x03\n" +
	"\rTunnelService\x12M\n" +
	"\fCreateTunnel\x12\x1d.relay.v1.CreateTunnelRequest\x1a\x1e.relay.v1.CreateTunnelResponse\x12J\n" +
	"\vCloseTunnel\x12\x1c.relay.v1.CloseTunnelRequest\x1a\x1d.relay.v1.CloseTunnelResponse\x12J\n" +
	"\vListTunnels\x12\x1c.relay.v1.ListTunnelsRequest\x1a\x1d.relay.v1.ListTunnelsResponse\x12P\n" +
	"\x0fGetTunnelStatus\x12\x1d.relay.v1.TunnelStatusRequest\x1a\x1e.relay.v1.TunnelStatusResponse\x12<\n" +
	"\n" +
	"StreamData\x12\x14.relay.v1.DataPacket\x1a\x14.relay.v1.DataPacket(\x010\x01BGZEgithub.com/2gc-dev/cloudbridge-client/pkg/relay/transport/proto;protob\x06proto3"

var (
	file_pkg_relay_transport_proto_tunnel_proto_rawDescOnce sync.Once
	file_pkg_relay_transport_proto_tunnel_proto_rawDescData []byte
)

func file_pkg_relay_transport_proto_tunnel_proto_rawDescGZIP() []byte {
	file_pkg_relay_transport_proto_tunnel_proto_rawDescOnce.Do(func() {
		file_pkg_relay_transport_proto_tunnel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_relay_transport_proto_tunnel_proto_rawDesc), len(file_pkg_relay_transport_proto_tunnel_proto_rawDesc)))
	})
	return file_pkg_relay_transport_proto_tunnel_proto_rawDescData
}

var file_pkg_relay_transport_proto_tunnel_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_relay_transport_proto_tunnel_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_pkg_relay_transport_proto_tunnel_proto_goTypes = []any{
	(PacketType)(0),               // 0: relay.v1.PacketType
	(*CreateTunnelRequest)(nil),   // 1: relay.v1.CreateTunnelRequest
	(*CreateTunnelResponse)(nil),  // 2: relay.v1.CreateTunnelResponse
	(*CloseTunnelRequest)(nil),    // 3: relay.v1.CloseTunnelRequest
	(*CloseTunnelResponse)(nil),   // 4: relay.v1.CloseTunnelResponse
	(*ListTunnelsRequest)(nil),    // 5: relay.v1.ListTunnelsRequest
	(*ListTunnelsResponse)(nil),   // 6: relay.v1.ListTunnelsResponse
	(*TunnelStatusRequest)(nil),   // 7: relay.v1.TunnelStatusRequest
	(*TunnelStatusResponse)(nil),  // 8: relay.v1.TunnelStatusResponse
	(*DataPacket)(nil),            // 9: relay.v1.DataPacket
	(*TunnelConfig)(nil),          // 10: relay.v1.TunnelConfig
	(*TunnelInfo)(nil),            // 11: relay.v1.TunnelInfo
	(*TunnelStats)(nil),           // 12: relay.v1.TunnelStats
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
}
var file_pkg_relay_transport_proto_tunnel_proto_depIdxs = []int32{
	10, // 0: relay.v1.CreateTunnelRequest.config:type_name -> relay.v1.TunnelConfig
	13, // 1: relay.v1.CreateTunnelRequest.timestamp:type_name -> google.protobuf.Timestamp
	11, // 2: relay.v1.CreateTunnelResponse.tunnel_info:type_name -> relay.v1.TunnelInfo
	11, // 3: relay.v1.ListTunnelsResponse.tunnels:type_name -> relay.v1.TunnelInfo
	11, // 4: relay.v1.TunnelStatusResponse.tunnel_info:type_name -> relay.v1.TunnelInfo
	12, // 5: relay.v1.TunnelStatusResponse.stats:type_name -> relay.v1.TunnelStats
	13, // 6: relay.v1.DataPacket.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 7: relay.v1.DataPacket.packet_type:type_name -> relay.v1.PacketType
	13, // 8: relay.v1.TunnelInfo.created_at:type_name -> google.protobuf.Timestamp
	13, // 9: relay.v1.TunnelInfo.last_activity:type_name -> google.protobuf.Timestamp
	10, // 10: relay.v1.TunnelInfo.config:type_name -> relay.v1.TunnelConfig
	13, // 11: relay.v1.TunnelStats.last_reset:type_name -> google.protobuf.Timestamp
	1,  // 12: relay.v1.TunnelService.CreateTunnel:input_type -> relay.v1.CreateTunnelRequest
	3,  // 13: relay.v1.TunnelService.CloseTunnel:input_type -> relay.v1.CloseTunnelRequest
	5,  // 14: relay.v1.TunnelService.ListTunnels:input_type -> relay.v1.ListTunnelsRequest
	7,  // 15: relay.v1.TunnelService.GetTunnelStatus:input_type -> relay.v1.TunnelStatusRequest
	9,  // 16: relay.v1.TunnelService.StreamData:input_type -> relay.v1.DataPacket
	2,  // 17: relay.v1.TunnelService.CreateTunnel:output_type -> relay.v1.CreateTunnelResponse
	4,  // 18: relay.v1.TunnelService.CloseTunnel:output_type -> relay.v1.CloseTunnelResponse
	6,  // 19: relay.v1.TunnelService.ListTunnels:output_type -> relay.v1.ListTunnelsResponse
	8,  // 20: relay.v1.TunnelService.GetTunnelStatus:output_type -> relay.v1.TunnelStatusResponse
	9,  // 21: relay.v1.TunnelService.StreamData:output_type -> relay.v1.DataPacket
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_pkg_relay_transport_proto_tunnel_proto_init() }
func file_pkg_relay_transport_proto_tunnel_proto_init() {
	if File_pkg_relay_transport_proto_tunnel_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_relay_transport_proto_tunnel_proto_rawDesc), len(file_pkg_relay_transport_proto_tunnel_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_relay_transport_proto_tunnel_proto_goTypes,
		DependencyIndexes: file_pkg_relay_transport_proto_tunnel_proto_depIdxs,
		EnumInfos:         file_pkg_relay_transport_proto_tunnel_proto_enumTypes,
		MessageInfos:      file_pkg_relay_transport_proto_tunnel_proto_msgTypes,
	}.Build()
	File_pkg_relay_transport_proto_tunnel_proto = out.File
	file_pkg_relay_transport_proto_tunnel_proto_goTypes = nil
	file_pkg_relay_transport_proto_tunnel_proto_depIdxs = nil
}
