#!/bin/bash

# –¢–µ—Å—Ç P2P –∫–∞–Ω–∞–ª–∞ –º–µ–∂–¥—É –¥–≤—É–º—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞–º–∏
# –õ–æ–∫–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞ (Mac) <-> Relay Server <-> –£–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä (zabbix-server)

echo "üöÄ –¢–µ—Å—Ç P2P –∫–∞–Ω–∞–ª–∞ –º–µ–∂–¥—É –¥–≤—É–º—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞–º–∏"
echo "============================================="
echo "–õ–æ–∫–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞: $(hostname)"
echo "–£–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä: zabbix-server (212.233.79.160)"
echo "Relay —Å–µ—Ä–≤–µ—Ä: edge.2gc.ru:8083"
echo "–í—Ä–µ–º—è: $(date)"
echo

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
LOCAL_CLIENT_PATH="./cloudbridge-client"
REMOTE_HOST="zabbix-server"
LOCAL_CONFIG="config-dev.yaml"
REMOTE_CONFIG="config-remote.yaml"
LOCAL_TOKEN="token-correct.txt"
REMOTE_TOKEN="token-remote.txt"
LOG_LEVEL="debug"
WAIT_TIME=30

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() { echo -e "\e[34m[INFO]\e[0m $1"; }
log_success() { echo -e "\e[32m[SUCCESS]\e[0m $1"; }
log_error() { echo -e "\e[31m[ERROR]\e[0m $1"; }
log_warn() { echo -e "\e[33m[WARN]\e[0m $1"; }

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
log_info "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã..."
pkill -f "cloudbridge-client" || true
ssh -F ~/.ssh/config "$REMOTE_HOST" "pkill -f 'cloudbridge-client' || true"
sleep 3

# –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
log_info "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç..."
cat "$LOCAL_TOKEN" | xargs -I {} "$LOCAL_CLIENT_PATH" p2p --config "$LOCAL_CONFIG" --token {} --log-level "$LOG_LEVEL" > local-client.log 2>&1 &
LOCAL_PID=$!
log_info "–õ–æ–∫–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç PID: $LOCAL_PID"

# –ó–∞–ø—É—Å–∫ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
log_info "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç..."
ssh -F ~/.ssh/config "$REMOTE_HOST" "cd /home/ubuntu && cat $(basename "$REMOTE_TOKEN") | xargs -I {} ./cloudbridge-client-remote p2p --config $(basename "$REMOTE_CONFIG") --token {} --log-level $LOG_LEVEL > remote-client.log 2>&1 & echo \$!" > remote_pid.txt
REMOTE_PID=$(cat remote_pid.txt)
log_info "–£–¥–∞–ª–µ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç PID: $REMOTE_PID"

# –û–∂–∏–¥–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
log_info "‚è≥ –ñ–¥–µ–º $WAIT_TIME —Å–µ–∫—É–Ω–¥ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π..."
sleep "$WAIT_TIME"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤
echo
log_info "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–æ–≤..."
echo "================================"

# –õ–æ–∫–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç
if ps -p "$LOCAL_PID" > /dev/null; then
    log_success "–õ–æ–∫–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç (PID: $LOCAL_PID): ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç"
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞:"
    tail -n 10 local-client.log
else
    log_error "–õ–æ–∫–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç (PID: $LOCAL_PID): ‚ùå –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞:"
    tail -n 10 local-client.log
fi

echo

# –£–¥–∞–ª–µ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç
REMOTE_STATUS=$(ssh -F ~/.ssh/config "$REMOTE_HOST" "ps -p $REMOTE_PID > /dev/null && echo 'running' || echo 'stopped'")
if [ "$REMOTE_STATUS" == "running" ]; then
    log_success "–£–¥–∞–ª–µ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç (PID: $REMOTE_PID): ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç"
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞:"
    ssh -F ~/.ssh/config "$REMOTE_HOST" "tail -n 10 remote-client.log"
else
    log_error "–£–¥–∞–ª–µ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç (PID: $REMOTE_PID): ‚ùå –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞:"
    ssh -F ~/.ssh/config "$REMOTE_HOST" "tail -n 10 remote-client.log"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–∏—Ä–æ–≤
echo
log_info "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–∏—Ä–æ–≤..."
echo "=========================================="
curl -s -X GET "http://edge.2gc.ru:8083/api/v1/tenants/tenant-216420165/peers/discover" \
  -H "Authorization: Bearer $(cat "$LOCAL_TOKEN")" | python3 -m json.tool 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å JSON"

# –¢–µ—Å—Ç P2P —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ QUIC
echo
log_info "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º P2P —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ QUIC..."
echo "============================================"

# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ QUIC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
cat > test-quic-connection.py << 'EOF'
#!/usr/bin/env python3
import socket
import time
import json

def test_quic_connection():
    print("üß™ –¢–µ—Å—Ç QUIC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ relay —Å–µ—Ä–≤–µ—Ä")
    print("===========================================")
    
    RELAY_HOST = "edge.2gc.ru"
    QUIC_PORT = 9090
    
    # –°–æ–∑–¥–∞–µ–º UDP —Å–æ–∫–µ—Ç –¥–ª—è QUIC
    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    sock.settimeout(10)
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ QUIC –ø–æ—Ä—Ç
        test_message = {
            "type": "quic_test",
            "from": "local-machine",
            "to": "remote-server",
            "message": "QUIC connection test",
            "timestamp": time.time()
        }
        
        message_json = json.dumps(test_message)
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º QUIC —Ç–µ—Å—Ç –Ω–∞ {RELAY_HOST}:{QUIC_PORT}")
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message_json}")
        
        sock.sendto(message_json.encode(), (RELAY_HOST, QUIC_PORT))
        print("‚úÖ QUIC —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç
        try:
            data, addr = sock.recvfrom(65507)
            response = json.loads(data.decode())
            print(f"üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç {addr}: {response}")
            return True
        except socket.timeout:
            print("‚è∞ Timeout –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ QUIC –æ—Ç–≤–µ—Ç–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ QUIC: {e}")
        return False
    finally:
        sock.close()

if __name__ == "__main__":
    success = test_quic_connection()
    if success:
        print("‚úÖ QUIC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("‚ùå QUIC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
EOF

python3 test-quic-connection.py

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
echo
log_info "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã..."
echo "===================================="
echo "–õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:"
ip -4 a show | grep -A 2 -B 1 '10\.' || ifconfig | grep -A 2 -B 1 '10\.'

echo
echo "–£–¥–∞–ª–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:"
ssh -F ~/.ssh/config "$REMOTE_HOST" "ip -4 a show | grep -A 2 -B 1 '10\.' || ifconfig | grep -A 2 -B 1 '10\.'"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤
echo
log_info "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤..."
kill "$LOCAL_PID" || true
ssh -F ~/.ssh/config "$REMOTE_HOST" "kill $REMOTE_PID || true"
sleep 2

# –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
echo
log_info "üìã –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢"
echo "=================="
echo "–í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: $(date)"
echo
echo "–õ–æ–≥–∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞: local-client.log"
echo "–õ–æ–≥–∏ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ $REMOTE_HOST"
echo
echo "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω—ã—Ö –ª–æ–≥–æ–≤:"
echo "  cat local-client.log"
echo "  ssh -F ~/.ssh/config $REMOTE_HOST 'cat remote-client.log'"
echo
echo "–î–ª—è –ø–æ–∏—Å–∫–∞ –æ—à–∏–±–æ–∫:"
echo "  grep -i error local-client.log"
echo "  ssh -F ~/.ssh/config $REMOTE_HOST 'grep -i error remote-client.log'"
echo
log_success "‚úÖ –¢–µ—Å—Ç P2P –∫–∞–Ω–∞–ª–∞ –º–µ–∂–¥—É –¥–≤—É–º—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞–º–∏ –∑–∞–≤–µ—Ä—à–µ–Ω!"
